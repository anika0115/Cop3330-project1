/**************************************************************
 *
 * GROUP #6
 * Group Members: Jasen Clerisier, Anika Patel, Markeisa Graham, Markee Davis
 * Date Completed: tba
 * Filename: shoppingCart.cpp
 * 
 **************************************************************/


#include <iostream>
#include <fstream>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <sstream>
#include <vector> 
#include <string>

using namespace std;

struct Address { string streetAddress;        //struct for address data
                 string city;  
                 string state;  
                 string zipCode;   
                };    

struct Customer { string customerNum;         //struct for customer data 
                  string customerName; 
                  int lineOfCredit; 
                  Address * corporateAddress;
                 };

struct Product{ int itemNo;                    //struct for product data 
                string description; 
                double price; };

/**************************************************************
 *                             parse                          *
 * Called by: <fill in>                                       *
 * Passed   : 2 arguments: a string, a character that is the  *
 *            delimiter                                       *
 * Purpose  : Split a given string by its delimiter           *
 * Returns  : String vector                                   *
 **************************************************************/
vector<string> parse(string line, char delimiter){
    
    vector<string> parsedLine;
    istringstream stringStream( line ); //create string stream from the line
    //iterate through the stream
    while (stringStream)
    {
        string s;
        //uses getline to get the values from the stream before the delimiting character
        if (getline( stringStream, s, delimiter))
          parsedLine.push_back(s);
    }
    return parsedLine;
}

/**************************************************************
 *                  generateOrderNum                          *
 * Called by: <fill in>                                       *                                       
 * Purpose  : Generate an order number based on epoch         *
 * Returns  : String order number                             *
 **************************************************************/
string generateOrderNum(){
    
    time_t now = time(0); //current time object
    
    string oNum;
    stringstream strstream;
    
    strstream << now; //read the date/time in epoch into the string stream
    strstream >> oNum; //output a string from the string stream
    return oNum;
}

int main()
{
    string base;                        //stores an entire line from the input file
    string convert_lineOfCredit;        //temporary variable to converts customer lineOfCredit string to integer
    string convert_itemNo;              //temporary variable to converts product itemNo string to integer
    string convert_price;               //temporary variable to converts product price string to double
    ifstream inFile1("customers.dat");  //declaration and opening of customers input file
    ifstream inFile2("inventory.dat");  //declaration and opening of inventory input file
    int i = 0;                          //incremented variable to store data being read from input
    int j = 0;
    Customer cust;                      //temporary placeholder to store for Customer struct
    Address add;                        //temporary placeholder to store for Address struct
    Product prod;                       //temporary placeholder to store for Product struct
    Customer Cust_arr [21];           //Customer array: holds Customer struct data
    Address Add_arr [21];             //Address array: holds Address struct data
    Product Prod_arr [20];            //Product array: holds Product struct data
    
    
    
        while(getline(inFile1, base))
    {
        vector <string> CparsedLine = parse(base,'|');  
            
        cust.customerNum = CparsedLine[0];
        cust.customerName = CparsedLine[1];
        convert_lineOfCredit = CparsedLine[2];
        istringstream (convert_lineOfCredit) >> cust.lineOfCredit;   //Reference: https://stackoverflow.com/questions/7663709/how-can-i-convert-a-stdstring-to-int
        Cust_arr[i] = cust;    
            
            
        vector <string> AparsedLine = parse(base,',');      
            
        add.streetAddress = AparsedLine[0];
        add.city = AparsedLine[1];
        add.state = AparsedLine[2];
        add.zipCode = AparsedLine[3];
        Add_arr[i] = add;    
        }
            
        while(getline(inFile2, base))
    {
        vector <string> PparsedLine = parse(base,','); 
            
        convert_itemNo = PparsedLine[0];
        istringstream (convert_itemNo) >> prod.itemNo;                //Reference: https://stackoverflow.com/questions/7663709/how-can-i-convert-a-stdstring-to-int
        prod.description = PparsedLine[1];
        convert_price = PparsedLine[2];  
        istringstream (convert_price) >> prod.price;                  //Reference: https://stackoverflow.com/questions/7663709/how-can-i-convert-a-stdstring-to-int
        Prod_arr[j] = prod;
        j++;
    }

    cout << endl << Cust_arr[1].customerNum << " " << Cust_arr[1].customerName << " "<< Add_arr[1].city << " " << Add_arr[1].state << " " << Add_arr[1].zipCode << endl;

    
                     
    return 0;

}
